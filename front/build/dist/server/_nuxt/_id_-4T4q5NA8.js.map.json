{"file":"_id_-4T4q5NA8.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAM,QAAQ;AACd,UAAM,SAAS;AACT,UAAA,WAAW,IAAI,IAAI;AACnB,UAAA,sBAAsB,IAAI,IAAI;AACpC,UAAM,YAAY,IAAI,SAAS,MAAM,OAAO,EAAE,CAAC;AACzC,UAAA,eAAe,IAAI,EAAE;AAC3B,UAAM,EAAE,MAAM,gBAAgB,IAAI,WAAW;AAEvC,UAAA,aAAa,CAAC,eAAe;AACjC,YAAM,UAAU;AAAA,QACd,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,MAAA;AAER,aAAO,IAAI,KAAK,UAAU,EAAE,eAAe,SAAS,OAAO;AAAA,IAAA;AAG7D,UAAM,iBAAiB,YAAY;AACjC,YAAM,gBAAgB;AAClB,UAAA,SAAS,SAAS,oBAAoB,OAAO;AAC/C,cAAM,WAAW;AAAA,UACf,KAAK,WAAW,SAAS,MAAM,QAAQ;AAAA,UACvC,KAAK,WAAW,SAAS,MAAM,SAAS;AAAA,QAAA;AAGpC,cAAA,aAAa,IAAI,OAAO,KAAK;AAAA,UACjC,oBAAoB;AAAA,UACpB;AAAA,YACE,UAAU;AAAA,YACV,KAAK;AAAA,cACH,SAAS,WAAW,SAAS,MAAM,OAAO,KAAK;AAAA,cAC/C,OAAO,WAAW,SAAS,MAAM,IAAI,IAAI,MAAM;AAAA,YACjD;AAAA,YACA,MAAM;AAAA,UACR;AAAA,QAAA;AAGS,mBAAA,YAAY,gBAAgB,MAAM;AACrC,gBAAA,cAAc,WAAW;AACvB,kBAAA,IAAI,iBAAiB,WAAW;AACpC,cAAA,SAAS,qBAAqB,gBAAgB,GAAG;AACnD,uBAAW,QAAQ,CAAC;AAAA,UACtB;AAAA,QAAA,CACD;AAEQ,QAAA,SAAA,iBAAiB,oBAAoB,MAAM;AAClD,uBAAa,mBAAmB;AAC9B,uBAAW,QAAQ,CAAC;AAAA,UACtB;AAAA,QAAA,CACD;AAAA,MAAA,OACI;AACG,gBAAA;AAAA,UACN;AAAA,QAAA;AAAA,MAEJ;AAAA,IAAA;AAGF,UAAM,eAAe,YAAY;AAC3B,UAAA;AACF,cAAM,WAAW,MAAM,KAAK,UAAU,gBAAgB,UAAU,KAAK;AAC5D,iBAAA,QAAQ,SAAS,KAAK,CAAC;AAChC,cAAM,SAAS;AACA;eACR,OAAO;AACN,gBAAA,MAAM,6BAA6B,KAAK;AAAA,MAClD;AAAA,IAAA;AAOF,UAAM,mBAAmB,MAAM;AACzB,UAAA,UAAU,QAAQ,GAAG;AACvB,kBAAU,SAAS;AACZ,eAAA,KAAK,EAAE,MAAM,gBAAgB,QAAQ,EAAE,IAAI,UAAU,MAAM,EAAA,CAAG;AACxD;MACf;AAAA,IAAA;AAGF,UAAM,eAAe,MAAM;AACzB,gBAAU,SAAS;AACZ,aAAA,KAAK,EAAE,MAAM,gBAAgB,QAAQ,EAAE,IAAI,UAAU,MAAM,EAAA,CAAG;AACxD;IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/panoramas/[id].vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"panorama\" class=\"panorama-container\">\n      <h1\n        class=\"text-3xl font-bold text-gray-900 text-center m-4 dark:text-white\"\n      >\n        {{ panorama.title }}\n      </h1>\n      <div ref=\"streetViewContainer\" class=\"street-view mb-2\" />\n      <div\n        v-if=\"errorMessage\"\n        class=\"error-message text-red-500 text-center mt-4 dark:text-white\"\n      >\n        {{ errorMessage }}\n      </div>\n      <div v-if=\"panorama.address\" class=\"text-center mb-4 dark:text-white\">\n        Адреса: {{ panorama.address }}\n      </div>\n      <div v-if=\"panorama.description\" class=\"text-center mb-4 dark:text-white\">\n        Опис: {{ panorama.description }}\n      </div>\n      <div\n        v-if=\"panorama.shooting_date\"\n        class=\"text-center mb-4 dark:text-white\"\n      >\n        Дата зйомки: {{ formatDate(panorama.shooting_date) }}\n      </div>\n      <div class=\"pagination\">\n        <UButton\n          :disabled=\"currentId <= 1\"\n          class=\"mx-4\"\n          @click=\"previousPanorama\"\n        >\n          Назад\n        </UButton>\n        <UButton class=\"mx-4\" @click=\"nextPanorama\"> Вперед </UButton>\n      </div>\n    </div>\n    <div v-else class=\"loading\">Загрузка панорамы...</div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\n\nconst route = useRoute();\nconst router = useRouter();\nconst panorama = ref(null);\nconst streetViewContainer = ref(null);\nconst currentId = ref(parseInt(route.params.id));\nconst errorMessage = ref('');\nconst { $api, $loadGoogleMaps } = useNuxtApp();\n\nconst formatDate = (dateString) => {\n  const options = {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  };\n  return new Date(dateString).toLocaleString('ru-RU', options);\n};\n\nconst initStreetView = async () => {\n  await $loadGoogleMaps();\n  if (panorama.value && streetViewContainer.value) {\n    const location = {\n      lat: parseFloat(panorama.value.latitude),\n      lng: parseFloat(panorama.value.longitude),\n    };\n\n    const streetView = new google.maps.StreetViewPanorama(\n      streetViewContainer.value,\n      {\n        position: location,\n        pov: {\n          heading: parseFloat(panorama.value.heading) || 0,\n          pitch: parseFloat(panorama.value.tilt) - 90 || 0,\n        },\n        zoom: 0,\n      },\n    );\n\n    streetView.addListener('zoom_changed', () => {\n      const currentZoom = streetView.getZoom();\n      console.log('Current zoom:', currentZoom);\n      if (document.fullscreenElement && currentZoom !== 0) {\n        streetView.setZoom(0);\n      }\n    });\n\n    document.addEventListener('fullscreenchange', () => {\n      if (document.fullscreenElement) {\n        streetView.setZoom(0);\n      }\n    });\n  } else {\n    console.warn(\n      'Контейнер для панорамы не готов или данные панорамы отсутствуют.',\n    );\n  }\n};\n\nconst loadPanorama = async () => {\n  try {\n    const response = await $api.panoramas.getPanoramaById(currentId.value);\n    panorama.value = response.data[0];\n    await nextTick();\n    initStreetView();\n  } catch (error) {\n    console.error('Ошибка загрузки панорамы:', error);\n  }\n};\n\nonMounted(async () => {\n  await loadPanorama();\n});\n\nconst previousPanorama = () => {\n  if (currentId.value > 1) {\n    currentId.value -= 1;\n    router.push({ name: 'panoramas-id', params: { id: currentId.value } });\n    loadPanorama();\n  }\n};\n\nconst nextPanorama = () => {\n  currentId.value += 1;\n  router.push({ name: 'panoramas-id', params: { id: currentId.value } });\n  loadPanorama();\n};\n</script>\n\n<style scoped>\n.panorama-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.street-view {\n  width: 100%;\n  height: 500px;\n}\n\n.loading {\n  text-align: center;\n  font-size: 1.5em;\n}\n\n.pagination {\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n\nbutton {\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n</style>\n"],"version":3}